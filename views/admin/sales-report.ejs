<%- include('admin-partials/header.ejs') %>
    <style>
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgb(0, 0, 0);
            background-color: rgba(0, 0, 0, 0.4);
        }

        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            margin-left: 25%;
            padding: 20px;
            border: 1px solid #888;
            width: 70%;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
    </style>

    <div class="screen-overlay"></div>

    <%- include('admin-partials/sidebar.ejs') %>

        <main class="main-wrap">
            <header class="main-header navbar">

                <div class="col-nav ms-auto">
                    <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i
                            class="material-icons md-apps"></i> </button>
                    <ul class="nav">

                        <li class="nav-item">
                            <a class="nav-link btn-icon darkmode" href="#"> <i
                                    class="material-icons md-nights_stay"></i> </a>
                        </li>

                        <li class="dropdown nav-item">
                            <a class="dropdown-item text-danger" href="/admin/logout"><i
                                    class="material-icons md-exit_to_app"></i>Logout</a>
                        </li>
                    </ul>
                </div>
            </header>
            <section class="content-main">
                <div>
                    <h4>Sales Report</h4>
                </div>
                <div class="content-header">
                    <div class="d-flex">
                        <div class="btn-group mb-4">
                            <button id="previewButton" class="btn btn-primary">Preview Report</button>
                        </div>
                    </div>

                    <div class="d-flex">
                        <div id="customDateRange" class="mb-3" style="display: none;">
                            <label for="startDate" class="form-label">Start Date:</label>
                            <input type="date" class="form-control" id="startDate"
                                max="<%= new Date().toISOString().split('T')[0] %>">

                            <label for="endDate" class="form-label mb-1">End Date:</label>
                            <input type="date" id="endDate" class="form-control"
                                max="<%= new Date().toISOString().split('T')[0] %>">
                            <div id="validationError" class="text-danger"></div>
                        </div>
                        <div class="mb-3 me-2">
                            <label for="reportType" class="form-label"></label>
                            <select class="form-select" id="reportType" aria-label="Report type">
                                <option disabled selected>Filtered By</option>
                                <option value="daily">Today</option>
                                <option value="weekly">Week</option>
                                <option value="monthly">Month</option>
                                <option value="yearly">Year</option>
                                <option value="custom">Custom</option>
                            </select>
                        </div>

                        <div class="mt-4">
                            <button id="generateReport" class="btn btn-primary">Generate Report</button>
                        </div>
                    </div>
                </div>

                <div class="card mb-4">
                    <header class="card-header">
                        <div class="row align-items-center">
                            <div class="col d-flex justify-content-between">
                                <h5>Total Orders: <span id="totalOrders">0</span></h5>
                                <h5>Total Sales: <span id="totalSales">0.00</span></h5>
                            </div>
                        </div>
                    </header>

                    <div class="container mt-5">
                        <div class="table-responsive">
                            <table class="table table-hover" id="salesTable">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>Order ID</th>
                                        <th>Date</th>
                                        <th>Email</th>
                                        <th>Coupon</th>
                                        <th>Paid</th>
                                        <th>Status</th>
                                        <th class="text-end">Method</th>
                                    </tr>
                                </thead>
                                <tbody id="orders-table">
                                    <% order.forEach((item,index)=> { %>
                                        <tr>
                                            <td>
                                                <%= index + 1 %>
                                            </td>
                                            <td><a href="/admin/order-management/order-detailed/<%= item._id %>"
                                                    class="fw-bold">
                                                    <%= item.oId %>
                                                </a></td>
                                            <td><%- new Date(item.orderDate).toLocaleDateString() %></td>
                                            <td>
                                                <%= item.user.email %>
                                            </td>
                                            <td>
                                                <%= item.coupon || 'N/A' %>
                                            </td>
                                            <td>INR <%= item.billTotal %>
                                            </td>
                                            <td><span class="btn badge rounded-pill alert-success">
                                                    <%= item.status %>
                                                </span></td>
                                            <td class="text-end">
                                                <%= item.paymentMethod %>
                                            </td>
                                        </tr>
                                        <% }) %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <!-- Preview Modal -->
                <div id="previewModal" class="modal" style="display:none;">
                    <div class="modal-content">
                        <span class="close">&times;</span>
                        <div id="reportContent">
                            <h1>SALES REPORT</h1>
                            
                            <div class="report-header">
                                <div>
                                    <p id="reportDateRange">From 08/01/2024 to 8/11/2024</p>
                                </div>
                                <div>
                                    <p>REPORT DATE:<span id="reportDate"></span></p>
                                </div>
                            </div>
                            <br>
                            <h4>SALES OVERVIEW</h4>
                            <table id="salesOverview" class="table">
                                <thead>
                                    <tr>
                                        <th>SALES COUNT</th>
                                        <th class="text-end">TOTAL SALES</th>
                                    </tr>
                                </thead>
                                <tbody id="salesOverviewBody">
                                    <tr>
                                        <td id="salesCount"></td>
                                        <td id="salesAmount" class="text-end"></td>
                                    </tr>
                                </tbody>
                            </table>
                            <br>
                            <table class="table" id="salesTable">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>Order ID</th>
                                        <th>Date</th>
                                        <th>Email</th>
                                        <th>Coupon</th>
                                        <th>Paid</th>
                                        <th>Status</th>
                                        <th class="text-end">Method</th>
                                    </tr>
                                </thead>
                                <tbody id="salesTableBody">
                                    <!-- Dynamically added through scripts -->
                                </tbody>
                            </table>
                            <!-- Table rows will be dynamically added here -->
                        </div>
                        <div class="d-flex">
                            <div class="btn-group mb-4">
                                <button onclick="generatePDF()" class="btn btn-primary">Download PDF</button>
                            </div>
                            <div class="btn-group mb-4 ms-2">
                                <button onclick="generateExcel()" class="btn btn-md btn-primary">Download Excel</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Button to open the modal -->


                <div class="page-pagination text-center" data-aos="fade-up" data-aos-delay="6">
                    <nav aria-label="Page navigation">
                        <ul class="pagination" id="pagination">
                            <!-- Pagination will be dynamically populated -->
                        </ul>
                    </nav>
                </div>
            </section>

            <%- include('admin-partials/footer.ejs') %>

        </main>

        <%- include('admin-partials/scripts.ejs') %>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>

            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    const reportType = document.getElementById('reportType');
                    const customDateRange = document.getElementById('customDateRange');
                    const startDate = document.getElementById('startDate');
                    const endDate = document.getElementById('endDate');
                    const ordersTable = document.getElementById('orders-table');

                    let reportData = [];
                    let salesDetails = {};

                    reportType.addEventListener('change', function () {
                        customDateRange.style.display = this.value === 'custom' ? 'flex' : 'none';
                    });

                    async function fetchReportData() {
                        const response = await fetch('/api/admin/generate-sales-report', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({
                                reportType: reportType.value,
                                startDate: startDate.value,
                                endDate: endDate.value
                            })
                        });
                        const result = await response.json();
                        salesDetails = result;
                        if (result.success) {
                            reportData = result.orders;
                            updateReportDisplay();
                            updateOrdersTable();
                        } else {
                            alert('Failed to fetch report data');
                        }
                    }

                    function updateReportDisplay() {
                        const tableBody = document.getElementById('salesTableBody');
                        tableBody.innerHTML = '';
                        
                        if (reportData.length === 0) {
                            showNoDataAvailable(tableBody);
                        } else {
                            reportData.forEach((order, index) => {
                                const row = tableBody.insertRow();
                                row.innerHTML = `
                                    <td>${index + 1}</td>
                                    <td><p class="fw-bold">${order.oId}</p></td>
                                    <td>${new Date(order.orderDate).toLocaleDateString()}</td>
                                    <td>${order.user.email}</td>
                                    <td>${order.coupon || 'N/A'}</td>
                                    <td>INR ${order.billTotal}</td>
                                    <td><span class="alert-success">${order.status}</span></td>
                                    <td class="text-end">${order.paymentMethod}</td>
                                `;
                            });
                        }

                        document.getElementById('totalOrders').textContent = `${salesDetails.totalOrders || 0}`;
                        document.getElementById('totalSales').textContent = `₹ ${(salesDetails.totalSales || 0).toFixed(2)}`;
                        document.getElementById('salesCount').textContent = `${salesDetails.totalOrders || 0}`;
                        document.getElementById('salesAmount').textContent = `₹ ${(salesDetails.totalSales || 0).toFixed(2)}`;
                        
                        document.getElementById('reportDate').textContent = `${salesDetails.reportDate || new Date().toLocaleDateString()}`;
                        document.getElementById('reportDateRange').textContent = `From ${salesDetails.fromDate || 'N/A'} to ${salesDetails.toDate || 'N/A'}`;
                    }

                    function updateOrdersTable() {
                        ordersTable.innerHTML = '';
                        
                        if (reportData.length === 0) {
                            showNoDataAvailable(ordersTable);
                        } else {
                            reportData.forEach((order, index) => {
                                const row = ordersTable.insertRow();
                                row.innerHTML = `
                                    <td>${index + 1}</td>
                                    <td><a href="/admin/order-management/order-detailed/${order._id}" class="fw-bold">${order.oId}</a></td>
                                    <td>${new Date(order.orderDate).toLocaleDateString()}</td>
                                    <td>${order.user.email}</td>
                                    <td>${order.coupon || 'N/A'}</td>
                                    <td>INR ${order.billTotal}</td>
                                    <td><span class="btn badge rounded-pill alert-success">${order.status}</span></td>
                                    <td class="text-end">${order.paymentMethod}</td>
                                `;
                            });
                        }
                    }

                    function showNoDataAvailable(tableBody) {
                        const row = tableBody.insertRow();
                        const cell = row.insertCell();
                        cell.colSpan = 8;
                        cell.innerHTML = '<p class="text-center fw-bold">No data available for the selected period</p>';
                    }

                    // Modal functionality
                    const modal = document.getElementById("previewModal");
                    const btn = document.getElementById("previewButton");
                    const span = document.getElementsByClassName("close")[0];

                    btn.onclick = function () {
                        fetchReportData().then(() => {
                            modal.style.display = "block";
                        });
                    }

                    span.onclick = function () {
                        modal.style.display = "none";
                    }

                    window.onclick = function (event) {
                        if (event.target == modal) {
                            modal.style.display = "none";
                        }
                    }

                    
                    fetchReportData();

                    reportType.addEventListener('change', fetchReportData);
                    startDate.addEventListener('change', fetchReportData);
                    endDate.addEventListener('change', fetchReportData);
                });

                async function generatePDF() {
                    const { jsPDF } = window.jspdf;
                    const doc = new jsPDF('p', 'mm', [210, 297]);
                    const content = document.getElementById('reportContent');

                    const margin = 15;
                    const pageWidth = 210;
                    const pageHeight = 297;
                    const contentWidth = pageWidth - (margin * 2);
                    const contentHeight = pageHeight - (margin * 2);

                    const canvas = await html2canvas(content, { scale: 2 });
                    const imgData = canvas.toDataURL('image/jpeg', 1.0);

                    const aspectRatio = canvas.width / canvas.height;
                    let imgWidth = contentWidth;
                    let imgHeight = imgWidth / aspectRatio;

                    if (imgHeight > contentHeight) {
                        imgHeight = contentHeight;
                        imgWidth = imgHeight * aspectRatio;
                    }

                    const xOffset = margin + (contentWidth - imgWidth) / 2;
                    let heightLeft = imgHeight;
                    let position = margin;

                    doc.addImage(imgData, 'JPEG', xOffset, position, imgWidth, imgHeight);
                    heightLeft -= (pageHeight - margin * 2);

                    while (heightLeft >= 0) {
                        position = heightLeft - imgHeight + margin;
                        doc.addPage();
                        doc.addImage(imgData, 'JPEG', xOffset, position, imgWidth, imgHeight);
                        heightLeft -= (pageHeight - margin * 2);
                    }

                    doc.save('sales_report.pdf');
                }

                function generateExcel() {
                    const wb = XLSX.utils.book_new();
                    
                    const title = document.querySelector('#reportContent h1').innerText;
                    const dateRange = document.getElementById('reportDateRange').innerText;
                    const reportDate = document.getElementById('reportDate').innerText;
                    
                    const salesCount = document.getElementById('salesCount').innerText;
                    const salesAmount = document.getElementById('salesAmount').innerText;
                    
                    const overviewWS = XLSX.utils.aoa_to_sheet([
                        [title],
                        [dateRange],
                        ['Report Date:', reportDate],
                        [],
                        ['SALES OVERVIEW'],
                        ['SALES COUNT', 'TOTAL SALES'],
                        [salesCount, salesAmount]
                    ]);
                    
                    overviewWS['!cols'] = [{ wch: 20 }, { wch: 20 }];
                    
                    const salesTable = document.getElementById('salesTable');
                    const detailsWS = XLSX.utils.table_to_sheet(salesTable);
                    
                    detailsWS['!cols'] = [
                        { wch: 5 }, 
                        { wch: 15 },
                        { wch: 15 },
                        { wch: 25 },
                        { wch: 15 },
                        { wch: 15 },
                        { wch: 15 },
                        { wch: 15 }
                    ];
                    
                    XLSX.utils.book_append_sheet(wb, overviewWS, "Overview");
                    XLSX.utils.book_append_sheet(wb, detailsWS, "Sales Details");
                    
                    XLSX.writeFile(wb, "sales_report.xlsx");
                }
            </script>

            </body>

            </html>