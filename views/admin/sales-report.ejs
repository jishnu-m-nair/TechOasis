<%- include('admin-partials/header.ejs') %>

    <div class="screen-overlay"></div>

    <%- include('admin-partials/sidebar.ejs') %>

        <main class="main-wrap">
            <header class="main-header navbar">

                <div class="col-nav ms-auto">
                    <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i
                            class="material-icons md-apps"></i> </button>
                    <ul class="nav">

                        <li class="nav-item">
                            <a class="nav-link btn-icon darkmode" href="#"> <i
                                    class="material-icons md-nights_stay"></i> </a>
                        </li>

                        <li class="dropdown nav-item">
                            <a class="dropdown-item text-danger" href="/admin/logout"><i
                                    class="material-icons md-exit_to_app"></i>Logout</a>
                        </li>
                    </ul>
                </div>
            </header>
            <section class="content-main">
                <div>
                    <h4>Sales Report</h4>
                </div>
                <div class="content-header">
                    <div class="d-flex">
                        <div class="btn-group mb-4">
                            <button style="width: 20%; height: 45px; margin-left: 10px" onclick="generatePDF()"
                                class="btn btn-primary">Download PDF</button>
                        </div>
                        <div class="btn-group mb-4 ms-2">
                            <button onclick="generateExcel()" class="btn btn-md btn-primary">Create Excel</button>
                        </div>
                    </div>

                    <div class="d-flex">
                        <div class="mb-3 me-2">
                            <label for="reportType" class="form-label"></label>
                            <select class="form-select" id="reportType" aria-label="Report type">
                                <option disabled selected>Filtered By</option>
                                <option value="daily">Today</option>
                                <option value="weekly">Week</option>
                                <option value="monthly">Month</option>
                                <option value="yearly">Year</option>
                                <option value="custom">Custom</option>
                            </select>
                        </div>
                        <div id="customDateRange" class="mb-3" style="display: none;">
                            <label for="startDate" class="form-label">Start Date:</label>
                            <input type="date" class="form-control" id="startDate"
                                max="<%= new Date().toISOString().split('T')[0] %>">

                            <label for="endDate" class="form-label mb-1">End Date:</label>
                            <input type="date" id="endDate" class="form-control"
                                max="<%= new Date().toISOString().split('T')[0] %>">
                            <div id="validationError" class="text-danger"></div>
                        </div>
                        <div class="mt-4">
                            <button id="generateReport" class="btn btn-primary">Generate Report</button>
                        </div>
                    </div>
                </div>

                <div class="card mb-4">
                    <header class="card-header">
                        <div class="row align-items-center">
                            <div class="col d-flex justify-content-between">
                                <h5>Total Orders: <span id="totalOrders">0</span></h5>
                                <h5>Total Sales: â‚¹ <span id="totalSales">0.00</span></h5>
                            </div>
                        </div>
                    </header>

                    <div class="container mt-5">
                        <div class="table-responsive">
                            <table class="table table-hover" id="salesTable">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>Order ID</th>
                                        <th>Date</th>
                                        <th>Email</th>
                                        <th>Coupon</th>
                                        <th>Paid</th>
                                        <th>Status</th>
                                        <th class="text-end">Method</th>
                                    </tr>
                                </thead>
                                <tbody id="orders-table">
                                    <!-- Orders will be populated here -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <div class="page-pagination text-center" data-aos="fade-up" data-aos-delay="6">
                    <nav aria-label="Page navigation">
                        <ul class="pagination" id="pagination">
                            <!-- Pagination will be dynamically populated -->
                        </ul>
                    </nav>
                </div>
            </section>

            <%- include('admin-partials/footer.ejs') %>

        </main>

        <%- include('admin-partials/scripts.ejs') %>

            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    const reportTypeSelect = document.getElementById('reportType');
                    const customDateRange = document.getElementById('customDateRange');
                    const generateReportBtn = document.getElementById('generateReport');
                    const ordersTable = document.getElementById('orders-table');
                    const pagination = document.getElementById('pagination');

                    reportTypeSelect.addEventListener('change', function () {
                        customDateRange.style.display = this.value === 'custom' ? 'block' : 'none';
                    });

                    generateReportBtn.addEventListener('click', generateReport);

                    function generateReport() {
                        const reportType = reportTypeSelect.value;
                        let reportData = { type: reportType };

                        if (reportType === 'custom') {
                            reportData.startDate = document.getElementById('startDate').value;
                            reportData.endDate = document.getElementById('endDate').value;
                        }

                        fetchSalesReport(reportData);
                    }

                    function fetchSalesReport(reportData) {
                        fetch('/api/admin/generate-sales-report', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(reportData)
                        })
                            .then(response => response.json())
                            .then(data => {
                                populateTable(data.orders);
                                updateTotals(data.totalOrders, data.totalSales);
                                updatePagination(data.currentPage, data.totalPages);
                            })
                            .catch(error => console.error('Error:', error));
                    }

                    function populateTable(orders) {
                        ordersTable.innerHTML = '';
                        orders.forEach((order, index) => {
                            const row = `
                                <tr>
                                    <td>${index + 1}</td>
                                    <td><a href="/admin/order-management/order-detailed/${order._id}" class="fw-bold">#${order.oId}</a></td>
                                    <td>${new Date(order.orderDate).toLocaleDateString()}</td>
                                    <td>${order.user.email}</td>
                                    <td>${order.coupon || 'N/A'}</td>
                                    <td>INR ${order.billTotal}</td>
                                    <td><span class="btn badge rounded-pill alert-success">${order.status}</span></td>
                                    <td class="text-end">${order.paymentMethod}</td>
                                </tr>
                            `;
                            ordersTable.insertAdjacentHTML('beforeend', row);
                        });
                    }

                    function updateTotals(totalOrders, totalSales) {
                        document.getElementById('totalOrders').textContent = totalOrders;
                        document.getElementById('totalSales').textContent = totalSales.toFixed(2);
                    }

                    function updatePagination(currentPage, totalPages) {
                        pagination.innerHTML = '';
                        for (let i = 1; i <= totalPages; i++) {
                            const li = document.createElement('li');
                            li.className = `page-item ${i === currentPage ? 'active' : ''}`;
                            li.innerHTML = `<a class="page-link" href="#" data-page="${i}">${i}</a>`;
                            pagination.appendChild(li);
                        }

                        pagination.addEventListener('click', function (e) {
                            if (e.target.tagName === 'A') {
                                e.preventDefault();
                                const page = e.target.getAttribute('data-page');
                                loadSales(page);
                            }
                        });
                    }

                    function loadSales(page = 1) {
                        fetchSalesReport({ type: 'all', page });
                    }

                    // Initial load
                    loadSales();
                });

                function generatePDF() {
                    fetchReport({ format: 'pdf' }, 'blob')
                        .then(blob => downloadFile(blob, 'sales_report.pdf'));
                }

                function generateExcel() {
                    fetchReport({ format: 'excel' }, 'blob')
                        .then(blob => downloadFile(blob, 'sales_report.xlsx'));
                }

                function fetchReport(reportData, responseType) {
                    return fetch('/api/admin/generate-sales-report', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(reportData)
                    })
                        .then(response => responseType === 'blob' ? response.blob() : response.json());
                }

                function downloadFile(blob, filename) {
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.style.display = 'none';
                    a.href = url;
                    a.download = filename;
                    document.body.appendChild(a);
                    a.click();
                    window.URL.revokeObjectURL(url);
                }
            </script>

            </body>

            </html>