<%- include('admin-partials/header.ejs') %>
    <style>
        .search-bar {
            flex-grow: 1;
        }
    </style>
    <div class="screen-overlay"></div>

    <%- include('admin-partials/sidebar.ejs') %>

        <main class="main-wrap">
            <header class="main-header navbar">
                <div class="col-nav ms-auto">
                    <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside">
                        <i class="material-icons md-apps"></i>
                    </button>
                    <ul class="nav">
                        <li class="dropdown nav-item">
                            <a class="dropdown-item text-danger" href="/admin/logout">
                                <i class="material-icons md-exit_to_app"></i>Logout</a>
                        </li>
                    </ul>
                </div>
            </header>
            <section class="content-main">
                <div class="content-header">
                    <div>
                        <h2 class="content-title card-title">Coupon Management</h2>
                    </div>
                    <div>
                        <a href="#" class="btn btn-primary btn-sm rounded" data-bs-toggle="modal"
                            data-bs-target="#addCouponModal">Add new coupon</a>
                    </div>
                </div>
                <div class="container mt-5">
                    <div class="d-flex align-items-center mb-4">
                        <div class="search-bar me-2">
                            <input type="text" id="searchCoupon" class="form-control" placeholder="Search coupons">
                        </div>
                        <div class="d-flex align-items-center">
                            <label for="filter" class="me-2 mb-0">Filter by:</label>
                            <form id="couponFilterForm">
                                <select id="filter" name="filter" class="form-select">
                                    <option value="all">All</option>
                                    <option value="true" selected>Active</option>
                                    <option value="false">Inactive</option>
                                </select>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table text-center">
                            <thead class="border rounded">
                                <tr class="text-center">
                                    <th scope="col">Sl No</th>
                                    <th scope="col">Coupon Code</th>
                                    <th scope="col">Description</th>
                                    <th scope="col">Discount in (₹)</th>
                                    <th scope="col">Min Purchase <br> Amount</th>
                                    <th scope="col">Max Purchase<br> Amount</th>
                                    <th scope="col">Expired On</th>
                                    <th scope="col">Maximum Users</th>
                                    <th scope="col">Status</th>
                                    <th scope="col">Action</th>
                                </tr>
                            </thead>
                            <tbody class="border rounded" id="couponContainer">
                                <% if(coupons) { %>
                                <% coupons.forEach((coupon, index) => { %>
                                    <tr>
                                        <td class="align-middle"><%= index + 1 %></td>
                                        <td class="align-middle"><%= coupon.couponCode %></td>
                                        <td class="align-middle"><%= coupon.description %></td>
                                        <td class="align-middle"><%= coupon.discountAmount %></td>
                                        <td class="align-middle"><%= coupon.minimumAmount %></td>
                                        <td class="align-middle"><%= coupon.maximumAmount %></td>
                                        <td class="align-middle"><%= coupon.expirationDate.toLocaleDateString() %></td>
                                        <td class="align-middle"><%= coupon.maxUsers || 'Unlimited' %></td>
                                        <td class="align-middle"><%= coupon.isActive ? 'Active' : 'Inactive' %></td>
                                        <td class="align-middle">
                                            <button type="button" class="btn btn-sm font-sm rounded btn-danger" data-coupon-id="<%= coupon._id %>">
                                                delete
                                            </button>
                                        </td>
                                    </tr>
                                <% }); %>
                                <% } else { %>
                                <tr>
                                    <td class="align-middle">
                                        1
                                    </td>
                                    <td class="align-middle">
                                        DNNXNXNXM
                                    </td>
                                    <td class="align-middle">
                                        descriptjfkdx,mx
                                    </td>
                                    <td class="align-middle">
                                        2000
                                    </td>
                                    <td class="align-middle">
                                        50000
                                    </td>
                                    <td class="align-middle">
                                        100000
                                    </td>
                                    <td class="align-middle">
                                        24-08-2024
                                    </td>
                                    <td class="align-middle">
                                        10
                                    </td>
                                    <td class="align-middle">
                                        active
                                    </td>
                                    <td class="align-middle">
                                        <button type="button" class="btn btn-sm font-sm rounded btn-danger">
                                            delete
                                        </button>
                                    </td>
                                </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </section>

            <!-- Add new Category Modal -->
            <div class="modal fade" id="addCouponModal" tabindex="-1" aria-labelledby="addCouponModalLabel"
                aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="addCouponModalLabel">Add New Coupon</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="addCouponForm" enctype="multipart/form-data">
                                <div class="mb-3">
                                    <label for="couponCode" class="form-label">Coupon Code</label>
                                    <input type="text" id="couponCode" name="couponCode" class="form-control" required />
                                    <span id="couponCodeError" class="text-danger"></span>
                                </div>
                                <div class="mb-3">
                                    <label for="description" class="form-label">Description</label>
                                    <input type="text" class="form-control" id="description" name="description" required />
                                    <span id="descriptionError" class="text-danger"></span>
                                </div>
                                <div class="mb-3">
                                    <label for="discountAmount" class="form-label">Discount in (₹)</label>
                                    <input type="text" class="form-control" id="discountAmount" name="discountAmount" required />
                                    <span id="discountAmountError" class="text-danger"></span>
                                </div>
                                <div class="mb-3">
                                    <label for="minimumAmount" class="form-label">Min Purchase Amount</label>
                                    <input type="text" class="form-control" id="minimumAmount" name="minimumAmount" required />
                                    <span id="minimumAmountError" class="text-danger"></span>
                                </div>
                                <div class="mb-3">
                                    <label for="maximumAmount" class="form-label">Max Purchase Amount</label>
                                    <input type="text" class="form-control" id="maximumAmount" name="maximumAmount" required />
                                    <span id="maximumAmountError" class="text-danger"></span>
                                </div>
                                <div class="mb-3">
                                    <label for="expirationDate" class="form-label">Expired On</label>
                                    <input type="date" class="form-control" id="expirationDate" name="expirationDate" required />
                                    <span id="expirationDateError" class="text-danger"></span>
                                </div>
                                <div class="mb-3">
                                    <label for="maxUsers" class="form-label">Maximum Users</label>
                                    <input type="text" class="form-control" id="maxUsers" name="maxUsers" required />
                                    <span id="maxUsersError" class="text-danger"></span>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                    <button type="submit" class="btn btn-primary">Add Category</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>

            <%- include('admin-partials/footer.ejs') %>

        </main>

        <%- include('admin-partials/scripts.ejs') %>

        <script>
            document.addEventListener('DOMContentLoaded', function() {
                const addCouponForm = document.getElementById('addCouponForm');
                const couponContainer = document.getElementById('couponContainer');

                // Function to show error
                function showError(elementId, message) {
                    const errorSpan = document.getElementById(elementId);
                    errorSpan.textContent = message;
                    errorSpan.style.display = 'block';
                }

                // Function to hide error
                function hideError(elementId) {
                    const errorSpan = document.getElementById(elementId);
                    errorSpan.textContent = '';
                    errorSpan.style.display = 'none';
                }

                // Function to hide all errors
                function hideAllErrors() {
                    const errorSpans = document.querySelectorAll('span[id$="Error"]');
                    errorSpans.forEach(span => {
                        span.textContent = '';
                        span.style.display = 'none';
                    });
                }

                // Add Coupon Form Submission
                addCouponForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    hideAllErrors();
                    
                    // Validation functions
                    function isValidCouponCode(code) {
                        return /^[A-Z0-9]{6,12}$/.test(code);
                    }

                    function isValidDate(date) {
                        return new Date(date) > new Date();
                    }

                    function isPositiveInteger(value) {
                        return Number.isInteger(Number(value)) && Number(value) > 0;
                    }

                    // Get form values
                    const couponCode = document.getElementById('couponCode').value.trim();
                    const description = document.getElementById('description').value.trim();
                    const discountAmount = document.getElementById('discountAmount').value;
                    const minimumAmount = document.getElementById('minimumAmount').value;
                    const maximumAmount = document.getElementById('maximumAmount').value;
                    const expirationDate = document.getElementById('expirationDate').value;
                    const maxUsers = document.getElementById('maxUsers').value;

                    // Perform validations
                    let isValid = true;

                    if (!isValidCouponCode(couponCode)) {
                        showError('couponCodeError', 'Coupon code must be 6-12 characters long and contain only uppercase letters and numbers.');
                        isValid = false;
                    }

                    if (description.length < 10 || description.length > 100) {
                        showError('descriptionError', 'Description must be between 10 and 100 characters.');
                        isValid = false;
                    }

                    if (!isPositiveInteger(discountAmount)) {
                        showError('discountAmountError', 'Discount amount must be a positive integer.');
                        isValid = false;
                    }

                    if(Number(discountAmount) >= 5000){
                        showError('discountAmountError', 'Maximum Discount amount must be a less than or equal to 5000');
                        isValid = false;
                    }

                    if (!isPositiveInteger(minimumAmount)) {
                        showError('minimumAmountError', 'Minimum purchase amount must be a positive integer.');
                        isValid = false;
                    }

                    if (!isPositiveInteger(maximumAmount)) {
                        showError('maximumAmountError', 'Maximum purchase amount must be a positive integer.');
                        isValid = false;
                    }

                    if (Number(discountAmount) >= Number(minimumAmount)) {
                        showError('discountAmountError', 'Maximum discount must be less than minimum purchase amount.');
                        isValid = false;
                    }

                    if (Number(maximumAmount) <= Number(minimumAmount)) {
                        showError('maximumAmountError', 'Maximum purchase amount must be greater than minimum purchase amount.');
                        isValid = false;
                    }

                    if (!isValidDate(expirationDate)) {
                        showError('expirationDateError', 'Expiration date must be in the future.');
                        isValid = false;
                    }

                    if (!isPositiveInteger(maxUsers)) {
                        showError('maxUsersError', 'Maximum users must be a positive integer.');
                        isValid = false;
                    }

                    if (!isValid) {
                        return;
                    }

                    // If all validations pass, prepare the form data
                    const formData = {
                        couponCode,
                        description,
                        discountAmount: parseInt(discountAmount),
                        minimumAmount: parseInt(minimumAmount),
                        maximumAmount: parseInt(maximumAmount),
                        expirationDate,
                        maxUsers: parseInt(maxUsers),
                    };

                    // Send the data to the server
                    fetch('/api/admin/add-coupon', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(formData)
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert('Coupon added successfully');
                            location.reload();
                        } else {
                            alert('Error adding coupon: ' + data.message);
                        }
                    })
                    .catch(error => {
                        alert('An error occurred while adding the coupon');
                    });
                });

                // Delete Coupon
                couponContainer.addEventListener('click', function(e) {
                    if (e.target.classList.contains('btn-danger')) {
                        const couponId = e.target.getAttribute('data-coupon-id');
                        if (confirm('Are you sure you want to delete this coupon?')) {
                            fetch(`/api/admin/delete-coupon/${couponId}`, { method: 'DELETE' })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    e.target.closest('tr').remove();
                                    alert('Coupon deleted successfully');
                                } else {
                                    alert('Error deleting coupon: ' + data.message);
                                }
                            })
                            .catch(error => {
                                alert('An error occurred while deleting the coupon');
                            });
                        }
                    }
                });
            });
        </script>

            </body>

            </html>