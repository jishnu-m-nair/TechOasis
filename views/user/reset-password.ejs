    <!-- Start Header Area -->
    <%- include('user-partials/header.ejs') %>
    <!-- End Header Area -->

    <style>
        .form-background{
            background-color:#dfdad3;
        }

        .hidden { 
            display: none; 
        }
    </style>

    <!-- Start Navbar Area -->
    <%- include('user-partials/navbar.ejs') %>
    <!-- End Navbar Area -->

    <div class="customer-login">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-4 col-md-4 form-background pt-2 pb-2">
                    <div class="account_form register" data-aos="fade-up" data-aos-delay="200">
                        <h3>Email Verification with OTP</h3>
                        <div id="otpForm">
                            <div class="mb-3 default-form-box" id="otpField">
                                <label for="otp" class="form-label">Enter OTP <span class="text-danger">*</span></label>
                                <input required type="text" id="otp" name="otp" placeholder="Enter OTP" maxlength="6">
                            </div>

                            <div class="mb-3 default-form-box" id="passwordFields">
                                <label for="newPassword" class="form-label">New Password <span class="text-danger">*</span></label>
                                <input required type="password" id="newPassword" name="newPassword" placeholder="Enter new password" maxlength="16">
                                
                                <label for="confirmPassword" class="form-label">Confirm Password <span class="text-danger">*</span></label>
                                <input required type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirm new password" maxlength="16">
                            </div>

                            <p id="error-message" class="text-red"></p>
                            <p id="success-message" class="text-green"></p>

                            <div class="mb-4" id="loginBtn">
                                <div class="mt-3 d-flex justify-content-center">
                                    <button type="submit" class="btn btn-md btn-black-default-hover" id="verifyOtpBtn" style="text-align: center;">Verify OTP</button>
                                </div>

                                <div class="mt-3 d-flex justify-content-center">
                                    <div id="countdown-timer" class="text-danger hidden" style="text-align: center">0<span id="minute">1</span>:<span id="seconds">00</span></div>
                                    <button class="btn btn-sm" id="resendOtpBtn" style="font-size: 12px;">Resend OTP</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Start Footer Section -->
    <%- include('user-partials/footer.ejs') %>
    <!-- End Footer Section -->
    
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- custom scripts -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const verifyOtpBtn = document.getElementById('verifyOtpBtn');
        const resendOtpButton = document.getElementById('resendOtpBtn');
        const countdownTimer = document.getElementById('countdown-timer');
        const otpField = document.getElementById('otpField');
        const passwordFields = document.getElementById('passwordFields');
        const errorMessage = document.getElementById('error-message');
        const successMessage = document.getElementById('success-message');

        let countdownInterval;

        function startCountdown(duration) {
            let timer = duration;
            countdownTimer.style.display = 'block';
            resendOtpButton.style.display = 'none';

            countdownInterval = setInterval(() => {
                let minutes = Math.floor(timer / 60);
                let seconds = timer % 60;

                document.getElementById('minute').textContent = minutes;
                document.getElementById('seconds').textContent = seconds < 10 ? '0' + seconds : seconds;

                if (--timer < 0) {
                    clearInterval(countdownInterval);
                    countdownTimer.style.display = 'none';
                    resendOtpButton.style.display = 'block';
                }
            }, 1000);
        }

        async function resendOtp(event) {
            event.preventDefault();
            try {
                const response = await fetch('/resend-otp', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const result = await response.json();

                if (response.ok) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'A new OTP has been sent to your email.'
                    });
                    startCountdown(59);
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: result.message || 'Failed to resend OTP. Please try again.'
                    });
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while resending the OTP. Please try again.'
                });
            }
        }
    
        async function resetPassword(event) {
            event.preventDefault();
            const otp = document.getElementById('otp').value.trim();
            const newPassword = document.getElementById('newPassword') ? document.getElementById('newPassword').value.trim() : null;
            const confirmPassword = document.getElementById('confirmPassword') ? document.getElementById('confirmPassword').value.trim() : null;
    
            if (!otp) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'OTP cannot be empty'
                });
                return;
            }

            if (otp.length !== 6) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'OTP should be 6 digits'
                });
                return;
            }
            if (newPassword.length < 8) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Password should be minimum 8 characters'
                });
                return;
            }
    
            if (newPassword && (newPassword !== confirmPassword)) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Passwords do not match.'
                });
                return;
            }
    
            try {
                const response = await fetch('/reset-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ otp, newPassword })
                });
    
                const result = await response.json();
    
                if (response.ok) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Password has been reset successfully.'
                    }).then(() => {
                        window.location.href = '/login';
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: result.message || 'Failed to reset password.'
                    });
                }
            } catch (error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while resetting the password. Please try again.'
                });
            }
        }
    
        verifyOtpBtn.addEventListener('click', resetPassword);
        resendOtpButton.addEventListener('click', resendOtp);

        startCountdown(59);
    });
</script>
        
        
<%- include('user-partials/scripts.ejs') %>